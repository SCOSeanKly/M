<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "B73B16D5-551E-468C-857C-9F74DE1AE2FD"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "F3C342B2-E2BE-420C-B435-8C61577F3CD6"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "M/URL Image Views/URLImageView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "569"
            endingLineNumber = "569"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "F3C342B2-E2BE-420C-B435-8C61577F3CD6 - 763b56e576475e7d"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (Swift.Array&lt;__C.UIImage&gt;) -&gt; () in closure #4 () -&gt; &lt;&lt;opaque return type of M.LargeImageView.fullScreenImagePickerCover(for: SwiftUI.Binding&lt;Swift.Optional&lt;__C.UIImage&gt;&gt;, completion: (Swift.Array&lt;__C.UIImage&gt;) -&gt; ()) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.customPresentationWithPrimaryBackground(detent: M.DetentType, backgroundColorOpacity: Swift.Double) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.fixedSize(horizontal: Swift.Bool, vertical: Swift.Bool) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;, SwiftUI.Spacer)&gt; in M.LargeImageView.body.getter : some"
                  moduleName = "M"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/seankelly/Documents/GitHub/M/M/M/URL%20Image%20Views/URLImageView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "569"
                  endingLineNumber = "569"
                  offsetFromSymbolStart = "100">
               </Location>
               <Location
                  uuid = "F3C342B2-E2BE-420C-B435-8C61577F3CD6 - 328bba33ae64d37"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (Swift.Array&lt;__C.UIImage&gt;) -&gt; () in closure #4 () -&gt; &lt;&lt;opaque return type of M.LargeImageView.fullScreenImagePickerCover(for: SwiftUI.Binding&lt;Swift.Optional&lt;__C.UIImage&gt;&gt;, completion: (Swift.Array&lt;__C.UIImage&gt;) -&gt; ()) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.customPresentationWithPrimaryBackground(detent: M.DetentType, backgroundColorOpacity: Swift.Double) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.fixedSize(horizontal: Swift.Bool, vertical: Swift.Bool) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;, SwiftUI.Spacer)&gt; in M.LargeImageView.body.getter : some"
                  moduleName = "M"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/seankelly/Documents/GitHub/M/M/M/URL%20Image%20Views/URLImageView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "569"
                  endingLineNumber = "569"
                  offsetFromSymbolStart = "100">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
